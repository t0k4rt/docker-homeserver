version: '3'

services:

  db:
    build: ./db
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - db.env

  nextcloud:
    image: nextcloud:14-apache
    restart: always
    volumes:
      - {{NEXTCLOUD_DATA}}:/var/www/html/data
      - {{NEXTCLOUD_CONFIG}}:/var/www/html/config
      - nextcloud:/var/www/html
    networks:
      - proxy-tier
      - default
    environment:
      - POSTGRES_HOST=db
    env_file:
      - nextcloud.env
    depends_on:
      - db
    labels:
      - "traefik.docker.network=proxy-tier"
      - "traefik.enable=true"
      - "traefik.backend=nextcloud"
      - "traefik.frontend.rule=Host:{{NEXTCLOUD_VHOST}}"
      - "traefik.protocol=http"
      - "traefik.port=80"


  transmission:
    image: linuxserver/transmission:150
    restart: always
    volumes:
      - {{TRANSMISSION_CONFIG}}:/config
      - {{TRANSMISSION_DATA}}:/downloads
      - transmission_watch:/watch
    env_file:
      - transmission.env
    networks:
      - proxy-tier
      - default
    expose: 
      - 9091
    labels:
      - "traefik.docker.network=proxy-tier"
      - "traefik.enable=true"
      - "traefik.backend=transmission"
      - "traefik.frontend.rule=Host:{{TRANSMISSION_VHOST}}"
      - "traefik.protocol=http"
      - "traefik.port=9091"


  traefik-proxy:
    image: traefik # The official Traefik docker image
    command: --api --docker # Enables the web UI and tells Traefik to listen to docker
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # The Web UI (enabled by --api)
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - {{TRAEFIK_CONF_FILE}}:/traefik.toml
      - {{TRAEFIK_LETSENCRYPT_FILE}}:/acme.json
    networks:
      - proxy-tier

volumes:
  transmission_watch:
  db:
  nextcloud:

networks:
  proxy-tier: