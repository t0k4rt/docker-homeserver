version: '3'

services:
  db:
    image: postgres:10-alpine
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - db.env

  nextcloud:
    image: nextcloud:fpm
    restart: always
    volumes:
      - {{nextcloud_data}}:/var/www/html/data
      - nextcloud:/var/www/html
    environment:
      - POSTGRES_HOST=db
    env_file:
      - db.env
    depends_on:
      - db

  web:
    build: ./web
    restart: always
    volumes:
      - nextcloud:/var/www/html:ro
    env_file:
      - web.env
    depends_on:
      - nextcloud
    networks:
      - proxy-tier
      - default

  transmission:
    image: linuxserver/transmission:150
    restart: always
    volumes:
      - transmission_config:/config
      - {{transmission_data}}:/downloads
      - transmission_watch:/watch
    env_file:
      - transmission.env
    networks:
      - proxy-tier

  proxy:
    build: ./proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-tier

  letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - certs:/etc/nginx/certs
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy-tier
    depends_on:
      - proxy

volumes:
  db:
  nextcloud:
  certs:
  vhost.d:
  html:
  transmission_config:
  transmission_downloads:
  transmission_watch:

networks:
  proxy-tier:
